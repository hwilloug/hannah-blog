"""Migrate book club schema and tables

Revision ID: 7e3acfc6a823
Revises: 384db0d58315
Create Date: 2024-05-15 14:13:50.785466

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7e3acfc6a823'
down_revision: Union[str, None] = '384db0d58315'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE SCHEMA IF NOT EXISTS bookclub")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('cover_image', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('book_id'),
    schema='bookclub'
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.String(), nullable=False),
    sa.Column('thread_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('parent_comment_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['bookclub.comments.comment_id'], ),
    sa.PrimaryKeyConstraint('comment_id'),
    schema='bookclub'
    )
    op.create_table('threads',
    sa.Column('thread_id', sa.String(), nullable=False),
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_comment_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['bookclub.books.book_id'], ),
    sa.ForeignKeyConstraint(['last_comment_id'], ['bookclub.comments.comment_id'], ),
    sa.PrimaryKeyConstraint('thread_id'),
    schema='bookclub'
    )
    # Add the rest of the table creation commands here
    sa.ForeignKeyConstraint(['thread_id'], ['bookclub.threads.thread_id'], ),
    op.create_foreign_key(
        "fk_comments_thread_id_threads",
        "comments", "threads",
        ["thread_id"], ["thread_id"],
        source_schema="bookclub", referent_schema="bookclub"
    )

def downgrade() -> None:
    op.drop_constraint('fk_comments_thread_id_threads', 'comments', schema='bookclub', type_='foreignkey')
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('thread_participants', schema='bookclub')
    op.drop_table('reviews', schema='bookclub')
    op.drop_table('comment_read_state', schema='bookclub')
    op.drop_table('comment_reactions', schema='bookclub')
    op.drop_table('threads', schema='bookclub')
    op.drop_table('reactions', schema='bookclub')
    op.drop_table('comments', schema='bookclub')
    op.drop_table('books', schema='bookclub')
    # ### end Alembic commands ###

    op.execute("DROP SCHEMA IF EXISTS bookclub CASCADE")
